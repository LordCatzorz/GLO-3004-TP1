/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                      GLO-3004    PROJET 1    ÉTAPE 1                      */
/*                                                                           */
/*                                 Équipe 11                                 */
/*                                                                           */
/*                     Mathieu Kirouac    111 069 000                        */
/*               Michael Lévesque-Dion    111 090 297                        */
/*                      Raphël Sylvain    111 124 564                        */
/*                                                                           */
/*                                 Hiver 2019                                */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 1                                                     (5 points) */
/*                                                                           */
/* Donnez la spécification en FSP d’un processus _VOITURE_ qui représente    */
/* une voiture à l’intersection, peut continuer, tourner à droite ou tourner */
/* à gauche. Ce processus doit être cyclique permettant de modéliser         */
/* plusieurs voitures, faire boucler le processus ne signifie pas que c’est  */
/* la même voiture qui . Le processus _VOITURE_ peut faire les actions       */
/* suivantes, _continue_, _tourneDroite_ ou _tourneGauche_. Ces actions      */
/* signifient ce que leurs noms suggèrent. Après chaque action ce processus  */
/* boucle sur lui même pour représenter le fait qu’une autre voiture         */
/* pourrait arriver.                                                         */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 2                                                     (3 points) */
/*                                                                           */
/* Donnez la spécification en FSP d’un processus _VOITURES_ qui représente   */
/* la mise en parallèle de 3 processus _VOITURE_ correspondant               */
/* respectivement aux voitures venant de l’est, de l’ouest et du sud. Vous   */
/* pouvez préfixer le processus _VOITURE_ par _est_, _ouest_ et _sud_.       */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 3                                                     (2 points) */
/*                                                                           */
/* Spécifiez un processus _PIETONS_ qui représente le comportement des       */
/* piétons. Un piéton peut effectuer une seule action _traverse_ puis boucle */
/* sur lui-même                                                              */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 4                                                     (5 points) */
/*                                                                           */
/* Par souci de simplicité, nous supposons que les lumières peuvent être     */
/* seulement rouge ou verte. Nous supposons que les lumières sont            */
/* initialement toutes rouges. Chacune des lumières passe du rouge au vert   */
/* et inversement.                                                           */
/*                                                                           */
/* Spécifiez un processus _LUMIERE_ qui fait passer une lumière du vert au   */
/* rouge.                                                                    */
/*                                                                           */
/* Spécifiez un processus _LUMIERES_ qui représente la mise en parallèle de  */
/* 3 processus _LUMIERE_ correspondant respectivement aux lumières face à    */
/* l’est, à l’ouest et au sud. Vous pouvez préfixer le processus _LUMIERE_   */
/* par _est_, _ouest_ et _sud_.                                              */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 5                                                     (5 points) */
/*                                                                           */
/* Spécifiez un processus _Pietons1_ qui représente le comportement des      */
/* piétons. Un piéton peut effectuer les actions suivantes _arrivent1_,      */
/* _attentePietons1_, _feuPietons1_ et _traversent1_. Évidemment, il faut    */
/* penser à ne faire traverser les piétons que quand la lumière piétons est  */
/* allumée et les faire attendre autrement.                                  */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 6                                                    (15 points) */
/*                                                                           */
/* Spécifiez un ou plusieurs processus qui précisent comment les lumières    */
/* s’allument à chaque côté de l’intersection, _est_, _ouest_ et _sud_. La   */
/* lumière _est_ est en face des voitures provenant de l’est et ainsi de     */
/* suite.                                                                    */
/*                                                                           */
/* Les lumières fonctionnent de la façon suivante. Elles peuvent être toutes */
/* rouges ainsi les piétons peuvent passer. Si la lumière est verte d’un     */
/* côté les voitures peuvent aller tout droit ou tourner à droite, si les    */
/* lumières sont toutes rouges sauf une verte, alors la couleur sera vert    */
/* clignotant pour ce côté et si possible (à cause de l’intersection en T)   */
/* la voiture du côté de cette lumière peut aller tout droit, tourner à      */
/* droite, si possible, ou tourner à gauche, si possible.                    */
/*                                                                           */
/* Donnez la définition d’un processus _Lumieres1_ qui spécifient comment    */
/* les lumières doivent changer. Nommez les actions de façon significative.  */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 7                                                    (20 points) */
/*                                                                           */
/* Spécifiez des processus contrôlant le passage des voitures selon les      */
/* lumières. Un contrôlant les voitures provenant de l’est, un pour les      */
/* voitures provenant de l’ouest et un pour les voitures provenant du sud.   */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 8                                                     (5 points) */
/*                                                                           */
/* En vous inspirant des processus définis dans Q7, spécifiez des propriétés */
/* permettant de vous assurer qu’il n’y aura pas de collision, ni            */
/* voiture-voiture, ni voiture-piétons. Vérifiez votre système au moyen de   */
/* ces propriétés et ce en le composant en parallèle avec les voitures       */
/* venant des trois côtés, les piétons et les lumières. D’abord sans les     */
/* processus de contrôle des lumières _TEST1_ puis avec ces processus        */
/* _TEST2_. Faites un usage judicieux du renommage pour que les lumières     */
/* fonctionnent correctement selon ce qui est décrit en Q5 et Q6. Ou bien    */
/* nommez dès le début les actions de la façon désirée. Le processus _TEST1_ */
/* pourrait provoquer du blocage et des violations des propriétés. Le        */
/* processus _TEST2_ ne devrait pas provoquer de blocage ni de violation des */
/* propriétés.                                                               */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 9                      Progrès                        (5 points) */
/*                                                                           */
/* Spécifiez des ensembles d’actions permettant de vérifier si les voitures  */
/* et les piétons peuvent toujours traverser l’intersection dans la          */
/* composition parallèle de la question précédente, _TEST2_, représentant le */
/* système en entier. À vous de décider s’il faut spécifier des singletons   */
/* ou non. Justifiez par une phrase de commentaire votre choix. Il ne doit   */
/* pas y avoir violation de propriétés de progrès.                           */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 10                                                   (25 points) */
/*                                                                           */
/* Faites toutes les étapes précédentes Q1 à Q9 mais pour l’autre            */
/* intersection. Inspirez-vous de vos solutions, évidemment. Vos processus   */
/* correspondant à ceux de la question 8, s’appelleeaient, pas               */
/* obligatoirement, _TEST3_ et _TEST5_.                                      */
/*                                                                           */
/* Notez que pour tester les propriétés de progrès de ces derniers vous      */
/* devez commenter les propriétés de progrès de l’intersection en T, et      */
/* vice-versa.                                                               */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 11                                                   (10 points) */
/*                                                                           */
/* Spécifiez un processus _TEST5_ qui met en parallèle _TEST2_ et _TEST4_.   */
/* Utilisez le renommage de certaines actions pour synchroniser les          */
/* lumières. Ainsi les lumières est et ouest des deux intersections doivent  */
/* êtres, rouges, vertes, clignotantes et jaunes en même temps. La même      */
/* chose pour les lumières côté sud de l’intersection en T et nord et sud de */
/* l’autre. Pour tester le progrès nous avons besoin de toutes les actions,  */
/* sauf celles renommées différemment. Il ne devrait y avoir ni blocage ni   */
/* violation de propriétés ni de violation de progrès                        */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */






