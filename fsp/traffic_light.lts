/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                      GLO-3004    PROJET 1    ÉTAPE 1                      */
/*                                                                           */
/*                                 Équipe 11                                 */
/*                                                                           */
/*                     Mathieu Kirouac    999 999 999                        */
/*               Michael Lévesque-Dion    111 090 297                        */
/*                      Raphël Sylvain    111 124 564                        */
/*                                                                           */
/*                                 Hiver 2019                                */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 1                                                     (5 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
set ActionsVoiture = {continue, tourneGauche, tourneDroite}
VOITURE = ( ActionsVoiture -> VOITURE ).

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 2                                                     (5 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
set Directions = {est, ouest, sud}
||VOITURES = ( Directions:VOITURE ).


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 3                                                     (2 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
PIETONS = ( traverse -> PIETONS ).


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 4                                                     (3 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
LUMIERE = ROUGE,
ROUGE = ( vert -> VERT ),
VERT = ( rouge -> ROUGE ).

||LUMIERES = ( Directions:LUMIERE ).

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 5                                                     (5 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
const False = 0
const True = 1
range Bool = False..True

// Round robin, pas de possibilité de Est et Ouest en même temps
CONTROLE_INTERSECTION = CONTROLE[False][False][False],
CONTROLE[est:Bool][ouest:Bool][sud:Bool] = (
    when (est == False && ouest == False && sud == False) traverse -> est.vert -> CONTROLE[True][ouest][sud] |
    when (est == True && ouest == False && sud == False) est.continue -> est.rouge -> ouest.vert -> CONTROLE[False][True][sud] |
    when (est == True && ouest == False && sud == False) est.tourneDroite -> est.rouge -> ouest.vert -> CONTROLE[False][True][sud] |
    when (est == False && ouest == True && sud == False) ouest.continue -> ouest.rouge -> sud.vert -> CONTROLE[est][False][True] | 
    when (est == False && ouest == True && sud == False) ouest.tourneGauche -> ouest.rouge -> sud.vert -> CONTROLE[est][False][True] | 
    when (est == False && ouest == False && sud == True) sud.tourneGauche -> sud.rouge -> CONTROLE[est][ouest][False] | 
    when (est == False && ouest == False && sud == True) sud.tourneDroite -> sud.rouge -> CONTROLE[est][ouest][False] 
) + {est.tourneGauche, ouest.tourneDroite, sud.continue}.

// Modélisation avec plusieurs processus locaux
CONTROLE_INTERSECTION2 = CONTROLE,
CONTROLE = ( traverse -> ALLUMER_LUMIERE ),
ALLUMER_LUMIERE = ( est.vert -> EST | ouest.vert -> OUEST | sud.vert -> SUD ),
EST = (
    {est.continue, est.tourneDroite} -> EST
    | est.rouge -> CONTROLE 
    | ouest.vert -> EST_OUEST
),
OUEST = (
    {ouest.continue, ouest.tourneGauche} -> EST
    | ouest.rouge -> CONTROLE 
    | est.vert -> EST_OUEST
),
EST_OUEST = (
    {est.continue} -> EST_OUEST
    | {ouest.continue} -> EST_OUEST
    | est.rouge -> OUEST 
    | ouest.rouge -> EST
),
SUD = (
    {sud.tourneGauche, sud.tourneDroite} -> SUD
    | sud.rouge -> CONTROLE
) + {est.tourneGauche, ouest.tourneDroite, sud.continue}.

||INTERSECTION = ( LUMIERES || PIETONS || VOITURES || CONTROLE_INTERSECTION ).

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 6                                                    (15 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
property TEST1 = TRAVERSE,
TRAVERSE = ( traverse -> TRAVERSE 
            | [Directions].vert -> STOP[1] ),
STOP[lumieres:1..2] = (
    when (lumieres < 2) [Directions].vert -> STOP[lumieres+1] 
    | when (lumieres == 2) [Directions].rouge -> STOP[lumieres-1]
    | when (lumieres == 1) [Directions].rouge -> TRAVERSE ). 

||CHECK1 = ( INTERSECTION || TEST1 ).


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 7                                                    (20 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
property TEST_EST = ( est.vert -> {est.continue, est.tourneDroite} -> TEST_EST ).
||CHECK_EST = ( INTERSECTION || TEST_EST ).


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 8                                                     (5 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Question 9                      Progrès                        (5 points) */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */